<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:MahApps_Metro_Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:c="http://stylist.codinator.net/2010" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" mc:Ignorable="d">
	<Style x:Key="GoBackButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource GrayBrush7}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20" Opacity="0" Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}"/>
						<Image Source="/Apollo;component/Icons/NetOn.png" Stretch="Fill"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="FlushButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource GrayBrush7}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="image">
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="180">
									<EasingDoubleKeyFrame.EasingFunction>
										<PowerEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Storyboard2">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="image">
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Opacity="0">
							<c:Stylist Opacity="0.5">
								<c:DetailBorder Thickness="2,0">
									<c:DetailBorder.LeftBorderBrush>
										<LinearGradientBrush>
											<GradientStop Color="#7F3399FF" Offset="0.5"/>
											<GradientStop Color="#00000000" Offset="1"/>
											<GradientStop Color="#00000000"/>
										</LinearGradientBrush>
									</c:DetailBorder.LeftBorderBrush>
									<c:DetailBorder.RightBorderBrush>
										<LinearGradientBrush>
											<GradientStop Color="#7F3399FF" Offset="0.5"/>
											<GradientStop Color="#00000000" Offset="1"/>
											<GradientStop Color="#00000000"/>
										</LinearGradientBrush>
									</c:DetailBorder.RightBorderBrush>
								</c:DetailBorder>
							</c:Stylist>
						</Border>
						<Image x:Name="image" Source="/Apollo;component/Icons/Reload.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Margin="5,3">
							<Image.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Image.RenderTransform>
						</Image>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True" SourceName="image">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SaveasImageButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource GrayBrush7}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<VisualStateManager.CustomVisualStateManager>
							<ei:ExtendedVisualStateManager/>
						</VisualStateManager.CustomVisualStateManager>
						<c:Stylist x:Name="stylist" Opacity="0.5" HorizontalAlignment="Stretch" Margin="0" Width="Auto" Visibility="Visible" RenderTransformOrigin="0.5,0.5">
							<c:Stylist.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</c:Stylist.RenderTransform>
							<c:DetailBorder Thickness="2,0">
								<c:DetailBorder.LeftBorderBrush>
									<LinearGradientBrush>
										<GradientStop Color="#7F3399FF" Offset="0.5"/>
										<GradientStop Color="#00000000" Offset="1"/>
										<GradientStop Color="#00000000"/>
									</LinearGradientBrush>
								</c:DetailBorder.LeftBorderBrush>
								<c:DetailBorder.RightBorderBrush>
									<LinearGradientBrush>
										<GradientStop Color="#7F3399FF" Offset="0.5"/>
										<GradientStop Color="#00000000" Offset="1"/>
										<GradientStop Color="#00000000"/>
									</LinearGradientBrush>
								</c:DetailBorder.RightBorderBrush>
							</c:DetailBorder>
						</c:Stylist>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" Margin="8,0">
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource TextDropShadow}"/>
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="RenderTransform" TargetName="stylist">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>